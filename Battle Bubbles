void setup() { 
  size(400, 400); 
} 

//You're the character in the upper left
//use the up down right left arrows to move!
//Type these letters to increase your stats when you have Pts!
//a = HP   s=Attack d=speed f = defense
//earn points by defeating enemies!
//Watch out, each battle is harder than the last!

var backgroundColor = color(247, 212, 212);
var wallColor = color(97, 81, 96);
var wallThickness = width/20;
var peopleSize = 10; //size of everyone
var peopleColor =color(242, 208, 104);
var peopleAmount = 50;
var peopleList = []; //list of all of you
var touchWallDistance =wallThickness-peopleSize/2;
var battle =1;
var furthestBattled = 0;

//make enemies and hero
var People = function(pos,hp,sta,att,def,spd,pts){
    this.pos = pos;
    this.hp=hp;
    this.sta=sta;
    this.att =att;
    this.def=def;
    this.spd = spd;
    this.pts=pts;
    
};
//draw enemies
People.prototype.draws = function(){
    fill(240,this.hp,104);
    noStroke();
    ellipse(this.pos.x,this.pos.y, peopleSize,peopleSize);
};
People.prototype.move = function(){
    if(keyPressed && keyCode === UP&& this.pos.y>touchWallDistance){
        this.pos.y-=this.spd;
    }
    if(keyPressed && keyCode === DOWN&&this.pos.y<height-touchWallDistance){
        this.pos.y+=this.spd;
    }
    if(keyPressed && keyCode === LEFT&& this.pos.x>touchWallDistance){
        this.pos.x-=this.spd;
    }
    if(keyPressed && keyCode === RIGHT&& this.pos.x<width-touchWallDistance){
        this.pos.x+=this.spd;
    }
};
void keyPressed(){
    if(peopleList[0].pts>0){
        switch(key.toString()){
            case "a":
                peopleList[0].hp+=100;
                peopleList[0].pts-=1;
                break;
            case "d":
                peopleList[0].spd+=0.1;
                peopleList[0].pts-=1;
                break;
            case "s":
                peopleList[0].att+=0.1;
                peopleList[0].pts-=1;
                break;
            case "f":
                peopleList[0].def+=0.1;
                peopleList[0].pts-=1;
                break;
            default:
                return;
        }
    }
};

//draw background
var makeRoom = function(){
    fill(backgroundColor);
    stroke(wallColor);
    strokeWeight(wallThickness);
    rect(0,0,width,height);
};

//place people randomly on the board, and place them in the people list
var positionPeople = function(){
    for(var i =0; i<peopleAmount;i++){
        var randomX = round(random(50,400-touchWallDistance));
        var randomY = round(random(50,400-touchWallDistance));
        peopleList.push(new People(new PVector(randomX,randomY),250,1,1,1,0.5,battle));
    }
};
//find the distance between two people
var getDistance = function(x1, y1, x2, y2) {
    return sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2));
};
var drawPeople = function(){
    for(var i =0; i<peopleList.length;i++){
        peopleList[i].draws();
        peopleList[i].hp+=0.01;
    }
};

var findClosest = function(x, y, bodies) {
    var closestDist = Infinity;
    var closestBody = null;
    for (var i = 0; i < bodies.length; i += 1) {
        var body = bodies[i];
        var dist = getDistance(x, y, body.pos.x, body.pos.y);
        if (dist < closestDist&&dist!==0) {
            closestDist = dist;
            closestBody = body;
        }
    }
    return closestBody;
};

var movePeople = function(){
    for (var i =1; i< peopleList.length;i++){
        
        var enemy = findClosest(peopleList[i].pos.x,peopleList[i].pos.y,peopleList);
        var dist = getDistance(peopleList[i].pos.x,peopleList[i].pos.y,enemy.pos.x,enemy.pos.y);
        if(dist<9){
            continue;
        }
        if(peopleList[i].pos.x > enemy.pos.x&& peopleList[i].pos.x>touchWallDistance){
            peopleList[i].pos.x -=peopleList[i].spd;
        }
        if(peopleList[i].pos.x < enemy.pos.x&& peopleList[i].pos.x<width-touchWallDistance){
            peopleList[i].pos.x +=peopleList[i].spd;
        }
        if(peopleList[i].pos.y > enemy.pos.y&& peopleList[i].pos.y>touchWallDistance){
            peopleList[i].pos.y -=peopleList[i].spd;
        }
        if(peopleList[i].pos.y < enemy.pos.y&& peopleList[i].pos.y<height-touchWallDistance){
            peopleList[i].pos.y +=peopleList[i].spd;
        }
        
    }
};
//tells you if the people are in contact
var areTheyFighting= function(){
    for(var i =0; i<peopleList.length;i++){
        for(var k =0; k< peopleList.length; k++){
            if(getDistance(peopleList[i].pos.x,peopleList[i].pos.y,peopleList[k].pos.x,peopleList[k].pos.y)<10){
                if(i!==k){
                peopleList[i].hp-=peopleList[k].att/peopleList[i].def;
                if(peopleList[i].hp<=0){
                    peopleList[k].pts++;
                }
                }
            }
        }
    }
};

var areTheyDead = function(){
    for(var i =peopleList.length-1; i>=0;i--){
        if(peopleList[i].hp <=0){
            peopleList.splice(i,1);
        }
    }
};
var spendPoints =function(){
    for(var i =1; i <peopleList.length;i++){
        if(peopleList[i].pts >0){
            var choice = round(random(0,4));
            if(choice<1){
                peopleList[i].hp+=100;
                peopleList[i].pts-=1;
            }
            else if(choice<2){
                peopleList[i].att+=0.1;
                peopleList[i].pts-=1;
            }
            else if(choice<3){
                peopleList[i].def+=0.1;
                peopleList[i].pts-=1;
            }
            else{
                peopleList[i].spd+=0.1;
                peopleList[i].pts-=1;
            }
        }
    }
};
var drawStats = function(){
    fill(122, 15, 15);
    text("HP:"+round(peopleList[0].hp)+"    Pow:"+round(peopleList[0].att*10)/10+"      Spd:" +round(peopleList[0].spd*10)/10 +"    Def:"+round(peopleList[0].def*10)/10+"     Pts:"+peopleList[0].pts,24,30);
    text("Press A    Press S    Press D     Press F",24,43);
    text("Battle:" +battle,24,375);
    text("Furthest Battled:" +furthestBattled,228,375);
};

var person = new People(new PVector(50,50), 250,1,1,1,0.5,3);
peopleList.push(person);
positionPeople();
void draw() {

    makeRoom();
    //peopleList[0].assignPoints();
    drawStats();
    person.move();
    drawPeople();
    //person.draws();
    fill(255, 0, 0);
    //text(peopleList[0].hp-1,50,50);
    //text(peopleList[0].pts,80,50);
    if(peopleList.length>1){
    spendPoints();
    movePeople();
    areTheyFighting();
    areTheyDead();
    }
    else{
        positionPeople();
        peopleList[0].pts++;
        battle++;
    }
   // ellipse(mouseX,mouseY,10,10);
   if(battle>furthestBattled){
       furthestBattled=battle;
   }
    if(person.hp <=0){
        noLoop();
        background(5, 5, 5);
    }
};
